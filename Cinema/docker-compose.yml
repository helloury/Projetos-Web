version: '3.8'

services:
  # Serviço do Backend (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_container
    command: npm run start:dev
    ports:
      - "${BACKEND_PORT}:3000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules # Evita que o node_modules local sobrescreva o do container
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - meu-app-net
    restart: unless-stopped

  # Serviço do Frontend (React/Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_container
    command: npm run dev
    ports:
      - "${FRONTEND_PORT}:5173"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - meu-app-net
    restart: unless-stopped

  # Serviço do Banco de Dados
  postgres:
    image: postgres:15-alpine
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data # Volume nomeado para persistir os dados
    networks:
      - meu-app-net
    restart: unless-stopped

  # Serviço do PGAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    networks:
      - meu-app-net
    restart: unless-stopped

  # Serviço do Nginx (Reverse Proxy)
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_container
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - frontend
      - backend
    networks:
      - meu-app-net
    restart: unless-stopped

# Definição das Redes e Volumes
networks:
  meu-app-net:
    driver: bridge

volumes:
  pg_data:
